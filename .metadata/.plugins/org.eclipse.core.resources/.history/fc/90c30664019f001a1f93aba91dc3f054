package com.ze.junit4.test;

// use static methods, Assert is a Class
import static org.junit.Assert.*;

import java.util.HashMap;
import java.util.Map;

import static org.hamcrest.Matchers.*;

import org.junit.Test;

import com.ze.junit4.T;

public class TTest {

	// keeps the bar green, to keeps the code clean
	@Test
	public void testAdd() {
		//fail("Not yet implemented");
		double d = 2.8;
		int n = 8;
		Map<String,String> map = new TreeMap<String, String>();
		map.put("k", "v");
		T t = new T();
		int z = t.add(5, 3);
		String s = t.concat("abc", "def");
	    /*assertEquals(8, z);
	    assertTrue(z > 3);
	    assertTrue("z could not more than 8", z > 10);*/
		assertThat(z, is(8));
		assertThat(z, allOf(greaterThan(5), lessThan(10)));
		assertThat(z, anyOf(greaterThan(5), lessThan(10)));
		assertThat(z,anything());
		assertThat(s, is("abc def"));
		assertThat(s, not("abc"));
		
		assertThat(s, containsString("def"));
		assertThat(s,endsWith("ef"));
		assertThat(s,startsWith("ab"));
		assertThat(z, equalTo(n));
		assertThat(s, equalToIgnoringCase("ABc DEf"));
		assertThat(s, equalToIgnoringWhiteSpace(" abc  def "));
		
		assertThat(d, closeTo(3.0, 0.3));
		assertThat(d, greaterThan(2.0));
		assertThat(d, lessThan(10.0));
		assertThat(d, greaterThanOrEqualTo(2.1));
		assertThat(d, lessThanOrEqualTo(10.4));
		
		assertThat(map, hasEntry("k","v"));
	}

}

